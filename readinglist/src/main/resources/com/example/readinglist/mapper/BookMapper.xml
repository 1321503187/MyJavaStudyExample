<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.readinglist.mapper.BookMapper">
    <resultMap type="com.example.readinglist.dto.Book" id="BookMap">
        <id property="id" column="id" />
        <result property="bookName" column="book_name" />
        <result property="author" column="author" />
        <result property="pubTime" column="pub_time" javaType="java.sql.Date" />
        <result property="readerId" column="reader_id" />
        <association property="reader" column="reader_id"
                     javaType="com.example.readinglist.dto.Reader">
            <id property="rId" column="r_id" />
            <result property="readerName" column="reader_name" />
            <result property="sex" column="sex" />
            <result property="age" column="age" />
        </association>
    </resultMap>

    <!--一对多关系查询-->
    <resultMap type="com.example.readinglist.dto.Book" id="BookTagsMap">
        <id property="id" column="id" />
        <result property="bookName" column="book_name" />
        <result property="author" column="author" />
        <result property="pubTime" column="pub_time" javaType="java.sql.Date" />
        <result property="readerId" column="reader_id" />
        <association property="reader" column="reader_id"
                     javaType="com.example.readinglist.dto.Reader">
            <id property="rId" column="r_id" />
            <result property="readerName" column="reader_name" />
            <result property="sex" column="sex" />
            <result property="age" column="age" />
        </association>
        <collection property="tags" ofType="com.example.demo.bean.Tag"
                    column="id" select="com.example.readinglist.mapper.TagMapper.getTagsByBookId">
        </collection>
    </resultMap>

    <update id="updateBook" parameterType="com.example.readinglist.dto.Book">
        update book
        <!--<set>-->
            <!--<if test="bookName != null">-->
                <!--book_name = #{bookName,jdbcType=VARCHAR},-->
            <!--</if>-->
            <!--<if test="author != null">-->
                <!--author = #{author,jdbcType=VARCHAR}-->
            <!--</if>-->
            <!--<if test="readerId != null">-->
                <!--reader_id = #{readerId,jdbcType=INTEGER}-->
            <!--</if>-->
        <!--</set>-->
        set
        book_name=#{bookName,jdbcType=VARCHAR},author = #{author,jdbcType=VARCHAR},reader_id = #{readerId,jdbcType=INTEGER}
        where id=#{id}
    </update>

    <delete id="deleteBook">
        delete from book where
        id=#{id}
    </delete>

    <insert id="addBook" parameterType="com.example.readinglist.dto.Book">
        insert into book(book_name,author,pub_time,reader_id)
        values(#{bookName},#{author},#{pubTime},#{readerId})
    </insert>

    <select id="getBookById" resultType="com.example.readinglist.dto.Book">
        SELECT *
        from book
        WHERE id = #{id};
    </select>

    <select id="getAllBook" resultType="com.example.readinglist.dto.Book">
        SELECT *
        from book
    </select>

    <select id="getAllBookByReader" resultMap="BookMap">
        SELECT b.*,r.*
        from book b
        left join reader r on b.reader_id = r.r_id
        WHERE b.reader_id = #{readerId};
    </select>

    <select id="getOneBookWithTags" resultMap="BookTagsMap">
        SELECT b.*,r.*
        from book b
        left join reader r on b.reader_id = r.r_id
        WHERE b.id = #{id};
    </select>
</mapper>